{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/elias/Desktop/reddit-gallery-react-redux/frontend/src/containers/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { CssBaseline } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { authStyles } from '../styles/authModal';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\nconst Signup = ({\n  signup,\n  isAuthenticated\n}) => {\n  _s();\n\n  const classes = authStyles();\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    re_password: ''\n  });\n  const {\n    username,\n    email,\n    password,\n    re_password\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password === re_password) {\n      signup(username, email, password, re_password);\n      setAccountCreated(true);\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (accountCreated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.container,\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: e => onSubmit(e),\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"fname\",\n                name: \"username\",\n                value: username,\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"username\",\n                label: \"Username\",\n                autoFocus: true,\n                onChange: e => onChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                value: email,\n                autoComplete: \"email\",\n                onChange: e => onChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                value: password,\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                onChange: e => onChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"re_password\",\n                value: re_password,\n                label: \"Re-enter password\",\n                type: \"password\",\n                id: \"re_password\",\n                onChange: e => onChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                className: classes.authLinks,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"primary\",\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"8BNT+myFo9JvHvlotA0Dup/HngE=\");\n\n_c = Signup;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  signup\n})(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/elias/Desktop/reddit-gallery-react-redux/frontend/src/containers/Signup.js"],"names":["React","useState","Avatar","Button","TextField","Grid","Box","LockOutlinedIcon","Typography","CssBaseline","Container","authStyles","Link","Redirect","connect","signup","Signup","isAuthenticated","classes","accountCreated","setAccountCreated","formData","setFormData","username","email","password","re_password","onChange","e","target","name","value","onSubmit","preventDefault","container","paper","avatar","form","submit","authLinks","mapStateToProps","state","auth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAD,KAAiC;AAAA;;AAC9C,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AACvCsB,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,WAAW,EAAE;AAJ0B,GAAD,CAAxC;AAOA,QAAM;AAAEH,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA6CL,QAAnD;;AAEA,QAAMM,QAAQ,GAAGC,CAAC,IAAI;AACpBN,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAxC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAIR,QAAQ,KAAKC,WAAjB,EAA8B;AAC5BX,MAAAA,MAAM,CAACQ,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,WAA5B,CAAN;AACAN,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GAPD;;AASA,MAAIH,eAAJ,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIE,cAAJ,EAAqB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAED,OAAO,CAACgB,SAA9B;AAAyC,MAAA,SAAS,EAAC,MAAnD;AAA0D,MAAA,QAAQ,EAAC,IAAnE;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAK,QAAA,SAAS,EAAEhB,OAAO,CAACiB,KAAxB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEjB,OAAO,CAACkB,MAA3B;AAAA,iCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAM,UAAA,SAAS,EAAElB,OAAO,CAACmB,IAAzB;AAA+B,UAAA,QAAQ,EAAET,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAAtD;AAA2D,UAAA,UAAU,MAArE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,YAAY,EAAC,OADf;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,KAAK,EAAEL,QAHT;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,QAAQ,MALV;AAME,gBAAA,SAAS,MANX;AAOE,gBAAA,EAAE,EAAC,UAPL;AAQE,gBAAA,KAAK,EAAC,UARR;AASE,gBAAA,SAAS,MATX;AAUE,gBAAA,QAAQ,EAAEK,CAAC,IAAED,QAAQ,CAACC,CAAD;AAVvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,EAAE,EAAC,OAJL;AAKE,gBAAA,KAAK,EAAC,eALR;AAME,gBAAA,IAAI,EAAC,OANP;AAOE,gBAAA,KAAK,EAAEJ,KAPT;AAQE,gBAAA,YAAY,EAAC,OARf;AASE,gBAAA,QAAQ,EAAEI,CAAC,IAAED,QAAQ,CAACC,CAAD;AATvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF,eA4BE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,KAAK,EAAEH,QALT;AAME,gBAAA,KAAK,EAAC,UANR;AAOE,gBAAA,IAAI,EAAC,UAPP;AAQE,gBAAA,EAAE,EAAC,UARL;AASE,gBAAA,QAAQ,EAAEG,CAAC,IAAED,QAAQ,CAACC,CAAD;AATvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA5BF,eAyCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,IAAI,EAAC,aAJP;AAKE,gBAAA,KAAK,EAAEF,WALT;AAME,gBAAA,KAAK,EAAC,mBANR;AAOE,gBAAA,IAAI,EAAC,UAPP;AAQE,gBAAA,EAAE,EAAC,aARL;AASE,gBAAA,QAAQ,EAAEE,CAAC,IAAED,QAAQ,CAACC,CAAD;AATvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAwDE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,OAAO,EAAC,WAHV;AAIE,YAAA,KAAK,EAAC,SAJR;AAKE,YAAA,SAAS,EAAEV,OAAO,CAACoB,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxDF,eAiEE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,MAAb;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,QAAX;AAAoB,gBAAA,SAAS,EAAEpB,OAAO,CAACqB,SAAvC;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAmFE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cAnFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD,CA5HD;;GAAMvB,M;;KAAAA,M;;AA8HN,MAAMwB,eAAe,GAAGC,KAAK,KAAK;AAChCxB,EAAAA,eAAe,EAAEwB,KAAK,CAACC,IAAN,CAAWzB;AADI,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAAqCC,MAArC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { authStyles } from '../styles/authModal'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const classes = authStyles();\r\n  \r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    re_password: '',\r\n  });\r\n\r\n  const { username, email, password, re_password } = formData;\r\n\r\n  const onChange = e => {\r\n    setFormData({...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if( password === re_password ){\r\n      signup(username, email, password, re_password);\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n\r\n  if( isAuthenticated ) {\r\n    return <Redirect to='/' />\r\n  }\r\n  if( accountCreated ) {\r\n    return <Redirect to='/login' />\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline/>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={e => onSubmit(e)} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  onChange={e=>onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  autoComplete=\"email\"\r\n                  onChange={e=>onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  value={password}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={e=>onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"re_password\"\r\n                  value={re_password}\r\n                  label=\"Re-enter password\"\r\n                  type=\"password\"\r\n                  id=\"re_password\"\r\n                  onChange={e=>onChange(e)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n                <Grid item xs>\r\n                  <Link to = \"/login\" className={classes.authLinks}>\r\n                    <Typography variant=\"body2\" color=\"primary\">Already have an account? Sign in</Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);"]},"metadata":{},"sourceType":"module"}